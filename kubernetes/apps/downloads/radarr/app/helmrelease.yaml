---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
        containers:
          main:
            image:
              pullPolicy: Always
              repository: ghcr.io/onedr0p/radarr
              tag: 5.2.6.8376@sha256:2de39930de91ae698f9461bb959d93b9d59610f88e0c026e96bc5d9c99aeea89
            env:
              # https://github.com/Radarr/Radarr/issues/7030#issuecomment-1039689518
              # https://github.com/dotnet/runtime/issues/9336
              COMPlus_EnableDiagnostics: "0"
              PUSHOVER_DEBUG: "false"
              PUSHOVER_PRIORITY: 0
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__PORT: &port 80
              TZ: America/Los_Angeles
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits: &resources
                memory: 2Gi
              requests:
                <<: *resources
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
          metrics:
            args:
              - "radarr"
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.6.0
            env:
              API_KEY:
                secretKeyRef:
                  name: radarr-secret
                  key: RADARR__API_KEY
              URL: http://radarr.downloads.svc.cluster.local
              PORT: &metricsPort 9707
            resources:
              limits: &metricsResources
                memory: 256Mi
              requests:
                <<: *metricsresources
                cpu: 10m
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *metricsPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        pod:
          automountServiceAccountToken: false
          securityContext:
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile:
              type: RuntimeDefault
            supplementalGroups: [65532]
    ingress:
      main:
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.perryhuynh.com?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: radarr
      data:
        type: nfs
        path: /mnt/tank/media
        server: ${SECRET_NAS_IP:=temp}
      pushover-notify:
        type: configMap
        name: radarr-config
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
      tmp:
        type: emptyDir
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
