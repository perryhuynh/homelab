---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.0.10101@sha256:f1a47717f5792d82becbe278c9502d756b898d63b2c637da131172c4adf1ffc7
            env:
              PUSHOVER_DEBUG: "false"
              PUSHOVER_PRIORITY: 0
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              TZ: America/Los_Angeles
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        pod:
          automountServiceAccountToken: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            seccompProfile: { type: RuntimeDefault }
    ingress:
      nginx:
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.perryhuynh.com?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
        enabled: true
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: radarr
      data:
        type: nfs
        path: /mnt/tank/media
        server: ${SECRET_NAS_IP:=temp}
      tmp:
        type: emptyDir
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
