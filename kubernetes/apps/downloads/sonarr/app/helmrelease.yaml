---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: prowlarr
      namespace: downloads
    - name: qbittorrent
      namespace: downloads
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: storage
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: sonarr-secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.738@sha256:11be16eff4fe2b2e0238444f0dfd9e2a93553f337175f17ed381dea96db07cab
            env:
              # https://github.com/Radarr/Radarr/issues/7030#issuecomment-1039689518
              # https://github.com/dotnet/runtime/issues/9336
              COMPlus_EnableDiagnostics: "0"
              PUSHOVER_DEBUG: "false"
              PUSHOVER_PRIORITY: 0
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__PORT: &port 80
              TZ: America/Los_Angeles
            envFrom: *envFrom
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 25m
                memory: 512Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
          metrics:
            args:
              - "sonarr"
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.6.0
            env:
              API_KEY:
                secretKeyRef:
                  name: sonarr-secret
                  key: SONARR__API_KEY
              URL: http://sonarr.downloads.svc.cluster.local
              PORT: &metricsPort 9707
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
                memory: 64Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: *metricsPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        pod:
          automountServiceAccountToken: false
          securityContext:
            fsGroup: 65532
            fsGroupChangePolicy: OnRootMismatch
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
    ingress:
      main:
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.perryhuynh.com?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: sonarr
      data:
        type: nfs
        path: /mnt/tank/media
        server: ${NAS_IP:=temp}
      pushover-notify:
        type: configMap
        name: sonarr-config
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
      tmp:
        type: emptyDir
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
