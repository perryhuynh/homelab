---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app autobrr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      autobrr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: autobrr-secret
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/autobrr
              tag: v1.60.0@sha256:5f95def0aa664e653c5de820f27661357a5c77a8eef0dd7fa204efedfb7d0e45
            env:
              AUTOBRR__CHECK_FOR_UPDATES: "false"
              AUTOBRR__HOST: 0.0.0.0
              AUTOBRR__LOG_LEVEL: INFO
              AUTOBRR__PORT: &port 80
              AUTOBRR__DATABASE_TYPE: postgres
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/healthz/liveness
                    port: *port
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        pod:
          automountServiceAccountToken: false
          securityContext:
            runAsGroup: 568
            runAsNonRoot: true
            runAsUser: 568
            seccompProfile: { type: RuntimeDefault }
    persistence:
      config:
        enabled: true
        type: emptyDir
    ingress:
      nginx:
        enabled: true
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    service:
      app:
        controller: autobrr
        ports:
          http:
            port: *port
