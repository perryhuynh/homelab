---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyoo-tools
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      matcher:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image: &image
              repository: ghcr.io/zoriya/kyoo_scanner
              tag: 4.6
            args: ["matcher"]
            env: &env
              RABBITMQ_DEFAULT_USER:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: username
              RABBITMQ_DEFAULT_PASS:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: password
              RABBITMQ_HOST:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: host
              RABBITMQ_PORT:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: port
            envFrom: &envFrom
              - configMapRef:
                  name: kyoo-config
              - secretRef:
                  name: kyoo-backend-secret
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 5m
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
      scanner:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image: *image
            env: *env
            envFrom: *envFrom
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 5m
            securityContext: *securityContext
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    persistence:
      data:
        type: nfs
        path: /mnt/tank/media
        server: ${SECRET_NAS_IP:=temp}
        advancedMounts:
          scanner:
            app:
              - path: /data
                subPath: library
                readOnly: true
