---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyoo
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: longhorn
      namespace: storage
    - name: kyoo-meilisearch
      namespace: media
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      frontend:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: edge@sha256:f158ffdbf6c3bd2e463bdb97fd8d708e7ad25f207d860554593ae10c37e28737
            envFrom:
              - configMapRef:
                  name: kyoo-config
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 50m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
      backend:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          00-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: kyoo-backend-secret
          01-migrations:
            envFrom:
              - secretRef:
                  name: kyoo-backend-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: edge@sha256:436dd3769c273d8e5c426383cf9d5d5552dc08b9185a1efbb4b183262d074253
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: edge@sha256:9d4e600635c20753ff17142cf74fafe71a3add02688b8118a8e5f583db19ef46
            env:
              TRANSCODER_URL: http://kyoo-transcoder:7666
              # RabbitMQ
              RABBITMQ_DEFAULT_USER:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: username
              RABBITMQ_DEFAULT_PASS:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: password
              RABBITMQ_HOST:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: host
              RABBITMQ_PORT:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: port
            envFrom:
              - configMapRef:
                  name: kyoo-config
              - secretRef:
                  name: kyoo-backend-secret
              - secretRef:
                  name: kyoo-meilisearch-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &backendPort 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                cpu: 6
                memory: 8Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
      transcoder:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_transcoder
              tag: 4.6
            envFrom:
              - configMapRef:
                  name: kyoo-config
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            resources:
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi
              requests:
                cpu: 250m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values: ["plex"]
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: 'true'
          securityContext:
            supplementalGroups: [44, 105, 65532]
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    persistence:
      cache:
        type: emptyDir
        advancedMounts:
          transcoder:
            app:
              - path: /cache
      data:
        type: nfs
        path: /mnt/tank/media
        server: ${SECRET_NAS_IP:=temp}
        advancedMounts:
          transcoder:
            app:
              - path: /data
                subPath: library
                readOnly: true
      metadata:
        existingClaim: kyoo-metadata
        advancedMounts:
          backend:
            app:
              - path: /metadata
    ingress:
      nginx:
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
              rewrite /api/(.*) /$1 break;
        enabled: true
        className: internal
        hosts:
          - host:  &host "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: frontend
                  port: http
          - host: *host
            paths:
              - path: /api
                service:
                  identifier: backend
                  port: http
    service:
      frontend:
        controller: frontend
        ports:
          http:
            port: 8901
      backend:
        controller: backend
        ports:
          http:
            port: *backendPort
      transcoder:
        controller: transcoder
        ports:
          http:
            port: 7666
