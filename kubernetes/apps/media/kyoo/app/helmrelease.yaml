---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kyoo
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: longhorn
      namespace: storage
    - name: kyoo-meilisearch
      namespace: media
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      frontend:
        annotations:
          reloader.stakater.com/auto: "true"
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_front
              tag: edge@sha256:f1865d9cc0683abda9e129720eac4c66c02109cb2cd74bfd30dcafe23d1d8184
            env:
              KYOO_URL: http://kyoo-backend:5000
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
      backend:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          00-init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
              - secretRef:
                  name: kyoo-backend-secret
          01-migrations:
            envFrom:
              - secretRef:
                  name: kyoo-backend-secret
            image:
              repository: ghcr.io/zoriya/kyoo_migrations
              tag: edge@sha256:296bc4b4f557f21d3ad8594764f0eec9045c3e4dd4627444f5d4328f9623878f
        containers:
          app:
            image:
              repository: ghcr.io/zoriya/kyoo_back
              tag: edge@sha256:a35a03536c42fcfc9b6928114ee990cf982b10dffd9b48e59e8ecccce7026b06
            env:
              # general
              PUBLIC_URL: https://kyoo.perryhuynh.com
              TRANSCODER_URL: http://kyoo-transcoder:7666
              # permissions
              DEFAULT_PERMISSIONS: overall.read,overall.play
              REQUIRE_ACCOUNT_VERIFICATION: "true"
              UNLOGGED_PERMISSIONS: overall.read
              # meilisearch
              RUN_MIGRATIONS: "true"
              MEILI_HOST: http://kyoo-meilisearch:7700
              # rabbitmq
              RABBITMQ_DEFAULT_USER:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: username
              RABBITMQ_DEFAULT_PASS:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: password
              RABBITMQ_HOST:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: host
              RABBITMQ_PORT:
                valueFrom:
                  secretKeyRef:
                    name: kyoo-rabbitmq-default-user
                    key: port
            envFrom:
              - secretRef:
                  name: kyoo-backend-secret
              - secretRef:
                  name: kyoo-meilisearch-secret
            probes:
              liveness: &probes
                enabled: true
                # TODO: re enable after cpu load issue is fixed
                # custom: true
                # spec:
                #   httpGet:
                #     path: /health
                #     port: &backendPort 5000
                #   initialDelaySeconds: 0
                #   periodSeconds: 10
                #   timeoutSeconds: 5
                #   failureThreshold: 5
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              limits:
                cpu: 8
                memory: 6Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    persistence:
      metadata:
        existingClaim: kyoo-metadata
        advancedMounts:
          backend:
            app:
              - path: /metadata
    ingress:
      nginx:
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            rewrite /api/(.*) /$1 break;
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        enabled: true
        className: internal
        hosts:
          - host:  &host "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: frontend
                  port: http
          - host: *host
            paths:
              - path: /api
                service:
                  identifier: backend
                  port: http
    service:
      frontend:
        controller: frontend
        ports:
          http:
            port: 8901
      backend:
        controller: backend
        ports:
          http:
            port: 5000
