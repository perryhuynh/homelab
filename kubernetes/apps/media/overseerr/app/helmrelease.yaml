---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: overseerr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: plex
      namespace: media
    - name: radarr
      namespace: downloads
    - name: sonarr
      namespace: downloads
  values:
    controllers:
      overseerr:
        containers:
          app:
            image:
              repository: ghcr.io/sct/overseerr
              tag: 1.34.0@sha256:4f38f58d68555004d3f487a4c5cbe2823e6a0942d946a25a2d9391d8492240a4
            env:
              LOG_LEVEL: "info"
              PORT: &port 80
              TZ: America/Los_Angeles
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 15m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
              readOnlyRootFilesystem: true
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsNonRoot: true
        runAsUser: 568
        seccompProfile: { type: RuntimeDefault }
    ingress:
      nginx:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.perryhuynh.com"
        enabled: true
        className: external
        hosts:
          - host: "canyouadd.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        enabled: true
        existingClaim: overseerr
        globalMounts:
          - path: /app/config
      cache:
        existingClaim: overseerr-cache
        globalMounts:
          - path: /app/config/cache/images
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/config/logs
      tmp:
        type: emptyDir
    service:
      app:
        controller: overseerr
        ports:
          http:
            port: *port
