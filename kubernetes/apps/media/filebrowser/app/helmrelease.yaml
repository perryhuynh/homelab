---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app filebrowser
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    controllers:
      filebrowser:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/filebrowser/filebrowser
              tag: v2.27.0@sha256:36330c6d361f4d17f30ff0ed747b3b99f6c50eaae7b9ba6d33b162b50bf2826a
            env:
              TZ: America/Los_Angeles
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /media
              FB_LOG: stdout
              # FB_NOAUTH: true
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 512Mi
    service:
      app:
        controller: filebrowser
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.perryhuynh.com?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.perryhuynh.com"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      tailscale:
        enabled: true
        className: tailscale
        hosts:
          - host: *app
            paths: *paths
        tls:
          - hosts:
              - *app
    persistence:
      config:
        enabled: true
        existingClaim: filebrowser
      media:
        type: nfs
        path: /mnt/tank/media/library
        server: ${SECRET_NAS_IP:=temp}
