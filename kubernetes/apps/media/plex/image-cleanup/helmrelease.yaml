---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex-image-cleanup
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex-image-cleanup:
        annotations:
          reloader.stakater.com/auto: "true"
        type: cronjob
        cronjob:
          schedule: "@weekly"
          backoffLimit: 0
          concurrencyPolicy: Forbid
          failedJobsHistory: 1
          successfulJobsHistory: 0
          timeZone: "America/Los_Angeles"
        containers:
          app:
            image:
              repository: docker.io/meisnate12/plex-image-cleanup
              tag: v1.0.2@sha256:257634cb149f104658079274139bd55d652962ecf331bfda01e71c10686f9e32
            env:
              PLEX_URL: http://plex.media.svc.cluster.local:32400
              PLEX_PATH: /data/Library/Application Support/Plex Media Server
              LOG_REQUESTS: true
              MODE: remove
              PHOTO_TRANSCODER: true
            envFrom:
              - secretRef:
                  name: plex-image-cleanup-secret
            resources:
              limits:
                memory: 1Gi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: {drop: ["ALL"]}
              readOnlyRootFilesystem: true
        pod:
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - plex
                  topologyKey: kubernetes.io/hostname
          automountServiceAccountToken: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            seccompProfile: {type: RuntimeDefault}
    persistence:
      config:
        type: emptyDir
      plex-config:
        existingClaim: plex
        globalMounts:
          - path: /data
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /data/Library/Application Support/Plex Media Server/Cache
