---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: teslamate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      teslamate:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: teslamate-secret
        containers:
          app:
            env:
              CHECK_ORIGIN: true
              DATABASE_HOST: postgres16-rw.database.svc.cluster.local
              MQTT_HOST: &mqttHost emqx-listeners.database.svc.cluster.local
              PORT: &port 80
              TZ: &TZ America/Los_Angeles
              VIRTUAL_HOST: "{{ .Release.Name }}.perryhuynh.com"
            envFrom: *envFrom
            image:
              repository: docker.io/teslamate/teslamate
              tag: 1.32.0@sha256:8c282ada5c72b7b0cbd316ec7bc010a9214d5943cf1e1b36ab9b7a98f45a5809
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  tcpSocket:
                    port: *port
            resources:
              limits:
                memory: 512Mi
              requests:
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
          api:
            env:
              DATABASE_HOST: postgres16-ro.database.svc.cluster.local
              ENABLE_COMMANDS: "false"
              COMMANDS_ALL: "false"
              MQTT_HOST: *mqttHost
              TZ: *TZ
              TESLAMATE_HOST: &host "{{ .Release.Name }}.perryhuynh.com"
            envFrom: *envFrom
            image:
              repository: ghcr.io/tobiasehlert/teslamateapi
              tag: 1.20.2@sha256:cf09259ad0ead1ac36f78d44d9755abc310c45630ac872d29ffe5e885e2da955
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/ping
                    port: &apiPort 8080
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 256Mi
              requests:
                cpu: 10m
            securityContext:
              allowPrivilegeEscalation: false
        pod:
          automountServiceAccountToken: false
          securityContext:
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10000
            seccompProfile: { type: RuntimeDefault }
    ingress:
      nginx:
        enabled: true
        className: internal
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
              - path: /api
                service:
                  identifier: app
                  port: api
    service:
      app:
        controller: teslamate
        ports:
          http:
            port: *port
            primary: true
          api:
            port: *apiPort
