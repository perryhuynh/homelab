---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-08-17T01-24-54Z@sha256:6f23072e3e222e64fe6f86b31a7f7aca971e5129e55cbccef649b109b8e651a1
            args: ["server", "/data", "--console-address", ":9001"]
            env:
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.perryhuynh.com,https://s3.perryhuynh.com
              MINIO_BROWSER_REDIRECT_URL: https://minio.perryhuynh.com
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              MINIO_PROMETHEUS_AUTH_TYPE: public
              MINIO_STORAGE_CLASS_RRS: EC:0
              MINIO_STORAGE_CLASS_STANDARD: EC:0
              MINIO_UPDATE: "off"
            envFrom:
              - secretRef:
                  name: minio-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: true
            resources:
              limits:
                memory: 4Gi
              requests:
                cpu: 100m
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: &id 65534
        runAsGroup: *id
        fsGroup: *id
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    ingress:
      nginx:
        enabled: true
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: s3.perryhuynh.com
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
    persistence:
      config:
        type: nfs
        path: /mnt/tank/minio
        server: ${SECRET_NAS_IP:=temp}
        globalMounts:
          - path: /data
    service:
      app:
        controller: minio
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
