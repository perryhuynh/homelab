---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: volsync-system
    - name: paperless-gotenberg
      namespace: default
    - name: paperless-tika
      namespace: default
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.7.2@sha256:703c990a790dfd4d25fb56df3afec27b13cb0926a3818bf265edac9c71311647
            env:
              # Configure application
              PAPERLESS_APPS: allauth.socialaccount.providers.openid_connect
              PAPERLESS_AUDIT_LOG_ENABLED: "true"
              PAPERLESS_PORT: &port 80
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_THREADS_PER_WORKER: 2
              PAPERLESS_TIKA_ENABLED: "true"
              PAPERLESS_TIME_ZONE: America/Los_Angeles
              PAPERLESS_URL: https://paperless.perryhuynh.com
              PAPERLESS_WEBSERVER_WORKERS: 2
              # Configure redis integration
              PAPERLESS_REDIS: redis://dragonfly.database.svc.cluster.local
              PAPERLESS_REDIS_PREFIX: paperless
              # Configure remote user auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "false"
              # Configure tika/gotenberg integration
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3000
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
        pod:
          automountServiceAccountToken: false
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    ingress:
      nginx:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.perryhuynh.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless
        globalMounts:
          - path: /usr/src/paperless/data
            subPath: ./data
          - path: /usr/src/paperless/media
            subPath: ./media
    service:
      app:
        controller: paperless
        ports:
          http:
            port: *port
